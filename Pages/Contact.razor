@page "/contact"
@using System.Threading
@implements IDisposable
@inject ClipboardService ClipboardService

<div id="title">
    Contact me
</div>

<div class="container">

    <br />

    <div id="phone">
        <span>Phone</span> <br />
        <span class="oi oi-phone" aria-hidden="true"> 534103040</span>
    </div>

    <br />

    <div id="email">
        <span>Email</span>
        <button class="btn " @onclick="CopyToClipboard" disabled=@state.IsDisabled>
            <i class="@state.ClassName"></i> @state.Text
        </button>
        <br />
        <span class="oi oi-envelope-closed" aria-hidden="true"> matekos1604@gmail.com</span>
    </div>

    <br />

    <div id="address">
        <span>Address</span> <br />
        <span class="oi oi-globe" aria-hidden="true"> Tychy, Poland</span>
    </div>

</div>

@code {
    CancellationTokenSource cts = new();
    State state = new("Copy", "oi oi-clipboard");

    async Task CopyToClipboard()
    {
        var temp = state;
        state = new("Copied", "oi oi-check", IsDisabled: true);
        await ClipboardService.WriteTextAsync("matekos1604@gmail.com");
        await Task.Delay(TimeSpan.FromSeconds(2), cts.Token);
        state = temp;
    }

    public void Dispose()
    {
        cts.Cancel(); // Cancel Task.Delay
        cts.Dispose();
    }

    record State(string Text, string ClassName, bool IsDisabled = false);
}

